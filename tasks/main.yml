---
# tasks file for naemon

- name: Include distribution specific variables
  include_vars: "{{ ansible_distribution }}.yml"
  tags: naemon

- include: CentOS.yml
  when: ansible_distribution == "CentOS"
  tags: naemon

- include: Ubuntu.yml
  when: ansible_distribution == "Ubuntu"
  tags: naemon

- name: Remove default Naemon configurations
  file: >
    path=/etc/naemon/conf.d/{{ item }}.cfg
    state=absent
  with_items:
    - localhost
    - printer
    - switch
    - windows
  tags: naemon

- name: Create Naemon resource configuration file
  template: >
    src=resource.cfg.j2
    dest=/etc/naemon/resource.cfg
    owner={{ naemon_user }}
    group={{ naemon_group }}
    mode=0640
  notify: restart naemon
  tags: naemon

- name: Create Naemon main configuration file
  template: >
    src=naemon.cfg.j2
    dest=/etc/naemon/naemon.cfg
    owner={{ naemon_user }}
    group={{ naemon_group }}
    mode=0644
  notify: restart naemon
  tags: neamon

- name: Create Naemon object configuration templates
  template: >
    src=templates/{{ item }}.cfg.j2
    dest=/etc/naemon/conf.d/templates/{{ item }}.cfg
    owner={{ naemon_user }}
    group={{ naemon_group }}
    mode=0644
  notify: reload naemon
  with_items:
    - contacts
    - services
    - hosts
  tags: naemon

- name: Create Naemon object configurations
  template: >
    src={{ item }}.cfg.j2
    dest=/etc/naemon/conf.d/{{ item }}.cfg
    owner={{ naemon_user }}
    group={{ naemon_group }}
    mode=0664
  with_items:
    - commands
    - timeperiods
    - contactgroups
    - contacts
    - servicegroups
    - services
    - servicedependencies
    - serviceescalations
    - hostgroups
    - hosts
    - hostdependencies
    - hostescalations
  notify: reload naemon
  tags: naemon

- name: Ensure Naemon service is started and enabled on boot
  service: name={{ naemon_service_name }} state=started enabled=yes
  tags: naemon
